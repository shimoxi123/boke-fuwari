---
import path from "node:path";
import ImageWrapper from "@components/misc/ImageWrapper.astro";
import License from "@components/misc/License.astro";
import Markdown from "@components/misc/Markdown.astro";
import PostMetadata from "@components/PostMeta.astro";
import Twikoo from "@components/Twikoo.astro";
import I18nKey from "@i18n/i18nKey";
import { i18n } from "@i18n/translation";
import MainGridLayout from "@layouts/MainGridLayout.astro";
import { getSortedPosts } from "@utils/content-utils";
import { formatDateToYYYYMMDD } from "@utils/date-utils";
import { getDir, getPostUrlByDate } from "@utils/url-utils";
import { Icon } from "astro-icon/components";
import {
	licenseConfig,
	profileConfig,
	siteConfig,
	twikooConfig,
} from "src/config";

export async function getStaticPaths() {
	const blogEntries = await getSortedPosts();
	return blogEntries.map((entry) => {
		const publishedDate = new Date(entry.data.published);
		const year = publishedDate.getFullYear().toString();
		const month = (publishedDate.getMonth() + 1).toString().padStart(2, "0");
		const day = publishedDate.getDate().toString().padStart(2, "0");
		const hour = publishedDate.getHours().toString().padStart(2, "0");

		return {
			params: {
				year,
				month,
				day,
				hour,
			},
			props: { entry },
		};
	});
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const { remarkPluginFrontmatter } = await entry.render();

const jsonLd = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	headline: entry.data.title,
	description: entry.data.description || entry.data.title,
	keywords: entry.data.tags,
	author: {
		"@type": "Person",
		name: entry.data.author?.name || profileConfig.name,
		url: entry.data.author?.website || Astro.site,
	},
	datePublished: formatDateToYYYYMMDD(entry.data.published),
	inLanguage: entry.data.lang
		? entry.data.lang.replace("_", "-")
		: siteConfig.lang.replace("_", "-"),
	// TODO include cover image here
};
---
<MainGridLayout banner={entry.data.image} title={entry.data.title} description={entry.data.description} lang={entry.data.lang} setOGTypeArticle={true} headings={headings}>
    <script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
        <div id="post-container" class:list={["card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full ",
            {}
        ]}>
            <!-- word count and reading time -->
            <div class="flex flex-row text-black/30 dark:text-white/30 gap-5 mb-3 transition onload-animation">
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:notes-rounded"></Icon>
                    </div>
                    <div class="text-sm">{remarkPluginFrontmatter.words} {" " + i18n(I18nKey.wordsCount)}</div>
                </div>
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:schedule-outline-rounded"></Icon>
                    </div>
                    <div class="text-sm">
                        {remarkPluginFrontmatter.minutes} {" " + i18n(remarkPluginFrontmatter.minutes === 1 ? I18nKey.minuteCount : I18nKey.minutesCount)}
                    </div>
                </div>
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:visibility-outline-rounded"></Icon>
                    </div>
                    <div class="text-sm">
                        <span id="page-views">正在加载...</span>
                    </div>
                </div>
            </div>

            <!-- title -->
            <div class="relative onload-animation">
                <div
                    data-pagefind-body data-pagefind-weight="10" data-pagefind-meta="title"
                    class="transition w-full block font-bold mb-3
                    text-3xl md:text-[2.25rem]/[2.75rem]
                    text-black/90 dark:text-white/90
                    md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
                    before:absolute before:top-[0.75rem] before:left-[-1.125rem]
                ">
                    {entry.data.title}
                </div>
            </div>

            <!-- author information -->
            {entry.data.author && (
                <div class="onload-animation mb-5">
                    <div class="flex items-center gap-4 p-4 rounded-xl bg-gradient-to-r from-[var(--primary)]/5 to-[var(--primary)]/10 border border-[var(--primary)]/20">
                        <div class="flex-shrink-0">
                            {entry.data.author.avatar ? (
                                <img 
                                    src={entry.data.author.avatar} 
                                    alt={`${entry.data.author.name} 的头像`}
                                    class="w-12 h-12 rounded-full object-cover ring-2 ring-[var(--primary)]/20"
                                    loading="lazy"
                                />
                            ) : (
                                <div class="w-12 h-12 rounded-full bg-[var(--primary)]/20 flex items-center justify-center">
                                    <Icon name="fa6-solid:user" class="text-[var(--primary)] text-lg" />
                                </div>
                            )}
                        </div>
                        <div class="flex-1 min-w-0">
                            <div class="flex items-center gap-2 mb-1">
                                <h3 class="font-bold text-[var(--primary)] text-lg">{entry.data.author.name}</h3>
                                <span class="text-xs text-black/40 dark:text-white/40 bg-[var(--primary)]/10 px-2 py-1 rounded-full">作者</span>
                            </div>
                            {entry.data.author.bio && (
                                <p class="text-sm text-black/60 dark:text-white/60 mb-2">{entry.data.author.bio}</p>
                            )}
                            <div class="flex items-center gap-3 text-xs">
                                {entry.data.author.website && (
                                    <a href={entry.data.author.website} target="_blank" rel="noopener noreferrer" 
                                       class="flex items-center gap-1 text-[var(--primary)] hover:underline">
                                        <Icon name="fa6-solid:globe" class="text-xs" />
                                        <span>网站</span>
                                    </a>
                                )}
                                {entry.data.author.github && (
                                    <a href={`https://github.com/${entry.data.author.github}`} target="_blank" rel="noopener noreferrer"
                                       class="flex items-center gap-1 text-[var(--primary)] hover:underline">
                                        <Icon name="fa6-brands:github" class="text-xs" />
                                        <span>GitHub</span>
                                    </a>
                                )}
                                {entry.data.author.email && (
                                    <a href={`mailto:${entry.data.author.email}`}
                                       class="flex items-center gap-1 text-[var(--primary)] hover:underline">
                                        <Icon name="fa6-solid:envelope" class="text-xs" />
                                        <span>邮箱</span>
                                    </a>
                                )}
                            </div>
                        </div>
                    </div>
                </div>
            )}

            <!-- metadata -->
            <div class="onload-animation">
                <PostMetadata
                        class="mb-5"
                        published={entry.data.published}
                        updated={entry.data.updated}
                        tags={entry.data.tags}
                        category={entry.data.category}
                ></PostMetadata>
                {!entry.data.image && <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-5"></div>}
            </div>

            <!-- always show cover as long as it has one -->

            {entry.data.image &&
                <ImageWrapper id="post-cover" src={entry.data.image} basePath={path.join("content/posts/", getDir(entry.id))} class="mb-8 rounded-xl banner-container onload-animation"/>
            }


            <Markdown class="mb-6 markdown-content onload-animation">
                <Content />
            </Markdown>

            {licenseConfig.enable && <License title={entry.data.title} slug={entry.slug} pubDate={entry.data.published} class="mb-6 rounded-xl license-container onload-animation"></License>}

        </div>
    </div>

    <!-- 评论系统 -->
    {twikooConfig.enable && (
        <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
            <div class="card-base z-10 px-6 md:px-9 py-6 relative w-full">
                <div class="flex items-center gap-3 mb-6">
                    <div class="w-6 h-6 rounded-md bg-[var(--primary)] flex items-center justify-center flex-shrink-0">
                        <Icon name="material-symbols:comment-outline-rounded" class="text-white w-4 h-4" />
                    </div>
                    <h2 class="text-xl font-bold text-[var(--primary)]">{i18n(I18nKey.comments)}</h2>
                </div>
                <Twikoo class="onload-animation" />
            </div>
        </div>
    )}

    <div class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full">
        <a href={entry.data.nextSlug ? getPostUrlByDate(entry.data.nextSlug, (entry.data as any).nextPublished) : "#"}
           class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.nextSlug}]}>
            {entry.data.nextSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-start gap-4" >
                <Icon name="material-symbols:chevron-left-rounded" class="text-[2rem] text-[var(--primary)]" />
                <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                    {entry.data.nextTitle}
                </div>
            </div>}
        </a>

        <a href={entry.data.prevSlug ? getPostUrlByDate(entry.data.prevSlug, (entry.data as any).prevPublished) : "#"}
           class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.prevSlug}]}>
            {entry.data.prevSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-end gap-4">
                <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                    {entry.data.prevTitle}
                </div>
                <Icon name="material-symbols:chevron-right-rounded" class="text-[2rem] text-[var(--primary)]" />
            </div>}
        </a>
    </div>

</MainGridLayout>